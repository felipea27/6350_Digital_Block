if {![namespace exists ::IMEX]} { namespace eval ::IMEX {} }
set ::IMEX::dataVar [file dirname [file normalize [info script]]]
set ::IMEX::libVar ${::IMEX::dataVar}/libs

catch { setDesignMode -process 22 }
catch { setAnalysisMode -analysisType onChipVariation }
catch { setAnalysisMode -checkType setup }
catch { setAnalysisMode -clkSrcPath true }
catch { setAnalysisMode -clockPropagation sdcControl }
catch { setAnalysisMode -cppr both }
catch { setAnalysisMode -skew true }
catch { setAnalysisMode -usefulSkew true }
catch { setOptMode -opt_view_pruning_setup_views_active_list { view_slow_mission } }
catch { setOptMode -opt_view_pruning_setup_views_persistent_list { view_slow_mission} }
catch { setOptMode -opt_view_pruning_tdgr_setup_views_persistent_list { view_slow_mission} }
catch { setOptMode -opt_auto_view false }
catch { setOptMode -opt_delete_insts true }
catch { setOptMode -opt_drv_margin 0 }
catch { setOptMode -opt_drv true }
catch { setOptMode -opt_resize_flip_flops true }
catch { setOptMode -opt_setup_target_slack 0 }
catch { setPathGroupOptions tdgp_reg2reg_default -effortLevel high }
catch { setPathGroupOptions tdgp_reg2reg_default -late -slackAdjustment -0 }
catch { setExtractRCMode  -engine postRoute -total_c_th 0 -relative_c_th 1 -coupling_c_th 0.1 }
catch {setNanoRouteMode -quiet -route_detail_antenna_factor 1.000000}
catch {setNanoRouteMode -quiet -route_detail_end_iteration 30}
catch {setNanoRouteMode -quiet -route_detail_exp_enable_adv_polygon_checker false}
catch {setNanoRouteMode -quiet -route_detail_fix_antenna true}
catch {setNanoRouteMode -quiet -route_detail_post_route_spread_wire "auto"}
catch {setNanoRouteMode -quiet -drouteStartIteration 0}
catch {setNanoRouteMode -quiet -route_detail_use_lef_pin_taper_rule true}
catch {setNanoRouteMode -quiet -route_detail_use_min_spacing_for_blockage auto}
catch {setNanoRouteMode -quiet -route_detail_use_multi_cut_via_effort "medium"}
catch {setNanoRouteMode -quiet -extract_design_signature 159407604}
catch {setNanoRouteMode -quiet -extract_rc_model_file "${::IMEX::libVar}/misc/rc_model.bin"}
catch {setNanoRouteMode -quiet -route_extract_third_party_compatible false}
catch {setNanoRouteMode -quiet -route_global_exp_timing_driven_std_delay 6.100000}
catch {setNanoRouteMode -quiet -route_global_exp_timing_driven_use_tif_timing_engine_for_import_design false}
catch {setNanoRouteMode -quiet -route_antenna_diode_insertion false}
catch {setNanoRouteMode -quiet -route_re_insert_filler_cell_list "UDB116SVT24_FILL_ECOCT20 UDB116SVT24_FILL_ECOCT19 UDB116SVT24_FILL_ECOCT18 UDB116SVT24_FILL_ECOCT17 UDB116SVT24_FILL_ECOCT16 UDB116SVT24_FILL_ECOCT15 UDB116SVT24_FILL_ECOCT14 UDB116SVT24_FILL_ECOCT13 UDB116SVT24_FILL_ECOCT12 UDB116SVT24_FILL_ECOCT11 UDB116SVT24_FILL_ECOCT10 UDB116SVT24_FILL_ECOCT9 UDB116SVT24_FILL_ECOCT8 UDB116SVT24_FILL_ECOCT7 UDB116SVT24_FILL_ECOCT6 UDB116SVT24_FILL_ECOCT5 UDB116SVT24_FILL_ECOCT4 UDB116SVT24_FILL_ECOCT3 UDB116SVT24_FILL_ECOCT2 UDB116SVT24_FILL_ECOCT1"}
catch {setNanoRouteMode -quiet -route_re_insert_filler_cell_list_from_file false}
catch {setNanoRouteMode -quiet -route_si_effort "high"}
catch {setNanoRouteMode -quiet -route_strict_honor_route_rule "false"}
catch {setNanoRouteMode -quiet -route_with_si_driven true}
catch {setNanoRouteMode -quiet -route_with_si_post_route_fix false}
catch {setNanoRouteMode -quiet -route_with_timing_driven true}
catch {setNanoRouteMode -quiet -timingEngine ".timing_file_75591.tif.gz"}

catch { setPlaceMode -place_detail_check_route true }
catch { setPlaceMode -place_detail_dpt_flow true }
catch { setPlaceMode -place_global_clock_power_driven true }
catch { setPlaceMode -place_global_clock_power_driven_effort high }
catch { setPlaceMode -place_global_cong_effort high }
catch { setPlaceMode -place_global_place_io_pins true }
catch { setIlmMode -keepHighFanoutPorts true -keepLoopBack false -keepInstInSdc false -keepFlatten true }
catch { set_verify_drc_mode -area {0 0 0 0} }
catch { set_verify_drc_mode -check_ndr_spacing auto }
catch { set_verify_drc_mode -check_only default }
catch { set_verify_drc_mode -check_same_via_cell true }
catch { set_verify_drc_mode -disable_rules "" }
catch { set_verify_drc_mode -exclude_pg_net false }
catch { set_verify_drc_mode -ignore_cell_blockage false }
catch { set_verify_drc_mode -ignore_trial_route false }
catch { set_verify_drc_mode -limit 1000 }
catch { set_verify_drc_mode -report TOP.drc.rpt }
catch { set_verify_drc_mode -use_min_spacing_on_block_obs auto }
catch { setDelayCalMode -enable_high_fanout true }
catch { setDelayCalMode -eng_enablePrePlacedFlow false }
catch { setDelayCalMode -engine aae }
catch { setDelayCalMode -ignoreNetLoad false }
catch { setDelayCalMode -SIAware true }
catch { setDelayCalMode -signOff true }
catch { setDelayCalMode -socv_accuracy_mode low }
catch { setHierMode -disableArt false }
catch { setHierMode -reportPostRouteArtTiming false }
catch { setHierMode -trialRouteHonorReadOnly false }
catch { setImportMode -discardFloatingVNets false }
catch { setImportMode -keepEmptyModule true }
catch { setSIMode -analysisType aae }
catch { setSIMode -enable_glitch_report false }
catch { setSIMode -separate_delta_delay_on_data true }
catch { setRouteMode -earlyGlobalRouteSecondPG false }
catch { setFillerMode -core {UDB116SVT24_FILL_ECOCT20 UDB116SVT24_FILL_ECOCT19 UDB116SVT24_FILL_ECOCT18 UDB116SVT24_FILL_ECOCT17 UDB116SVT24_FILL_ECOCT16 UDB116SVT24_FILL_ECOCT15 UDB116SVT24_FILL_ECOCT14 UDB116SVT24_FILL_ECOCT13 UDB116SVT24_FILL_ECOCT12 UDB116SVT24_FILL_ECOCT11 UDB116SVT24_FILL_ECOCT10 UDB116SVT24_FILL_ECOCT9 UDB116SVT24_FILL_ECOCT8 UDB116SVT24_FILL_ECOCT7 UDB116SVT24_FILL_ECOCT6 UDB116SVT24_FILL_ECOCT5 UDB116SVT24_FILL_ECOCT4 UDB116SVT24_FILL_ECOCT3 UDB116SVT24_FILL_ECOCT2 UDB116SVT24_FILL_ECOCT1} }
catch { setFillerMode -restoreState false }
catch { setFillerMode -saveState false }
catch { setFPlanMode -cellsForExtraSites {} }
catch { setFPlanMode -defaultRowPatternSite {} }
catch { setFPlanMode -defaultTechSite GF22_DST }
catch { setFPlanMode -disableEolBlockageOnEdges {} }
catch { setFPlanMode -extraSites {} }
catch { setFPlanMode -firstRowSiteIndex 0 }
catch { setFPlanMode -lastRowSiteIndex -1 }
catch { setFPlanMode -maxIoHeight false }
catch { setFPlanMode -place_check_ignore_fixed_cell_list {} }
catch { setFPlanMode -powerRailLayer {} }
catch { setFPlanMode -skipViolations {} }
